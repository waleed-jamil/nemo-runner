#!/usr/bin/env node
'use strict';


/**
 * Module dependencies.
 */

var program = require('commander');
var path = require('path');
var fs = require('fs');
var Nemo = require('nemo');
var cwd = process.cwd();
var starter = require('../lib/starter');
var flow = require('../lib/flow');
var async = require('async');
var debug = require('debug');
var log = debug('nemo-runner:log');
var error = debug('nemo-runner:error');

function list(val) {
  return val.split(',');
}
function cwdPath(rel) {
  return path.resolve(cwd, rel);
}
program
  .version(JSON.parse(fs.readFileSync(path.join(__dirname, '..', 'package.json'), 'utf8')).version)
  .usage('[options]')
  .option('-B, --base-directory <path>', 'parent directory for config/ and spec/ (or other test file) directories. relative to cwd', cwdPath)
  .option('-P, --profile [profile]', 'which profile(s) to run, out of the configuration', list)
  .option('-G, --grep <pattern>', 'only run tests matching <pattern>', list)
  .option('-F, --file ', 'run parallel by file')
  .option('-D, --data ', 'run parallel by data')
  .option('--debug-brk', 'enable node\'s debugger breaking on the first line')
  .option('--inspect', 'activate devtools in chrome')
  .option('--no-timeouts', 'remove timeouts in debug/inspect use case')
    .option('-L, --locales [locale]', 'locales you wany to run in')
    .option('-C, --maxConcurrent number', 'Maximum number of tests to run at same time')
    .option('-M , --data-path [file]', 'path to the local data file', list)
  .parse(process.argv);

program._name = 'nemo-runner';

Nemo.Configure(program.baseDirectory, {}).then(function (config) {
  let prefontaine = {program: program, config: config};
  flow = flow.map(function (fn) {
    return fn.bind(prefontaine);
  });
  log('flow length %d', flow.length);
  async.series(flow, function () {
    log('assembled %d instances', prefontaine.instances.length);
    starter.apply(prefontaine);
  });
}).catch(function (err) {
  error('problem with main configuration %O', err);
});

